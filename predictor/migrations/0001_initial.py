# Generated by Django 3.1.6 on 2021-02-16 01:35

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('btcusd', 'BTCUSD'), ('ethusd', 'ETHUSD')], db_index=True, default='btcusd', max_length=20)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('dt', models.DateTimeField(db_index=True)),
                ('open', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
                ('high', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
                ('low', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
                ('close', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
                ('volume', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('btcusd', 'BTCUSD'), ('ethusd', 'ETHUSD')], default='btcusd', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('window_length', models.PositiveSmallIntegerField(default=15)),
                ('output_size', models.PositiveSmallIntegerField(default=1)),
                ('neurons', models.PositiveSmallIntegerField(default=20)),
                ('shuffle_buffer_size', models.PositiveSmallIntegerField(default=1000)),
                ('training_size', models.DecimalField(decimal_places=2, default=0.8, max_digits=3)),
                ('epochs', models.PositiveSmallIntegerField(blank=True, default=4, null=True)),
                ('batch_size', models.PositiveSmallIntegerField(blank=True, default=128, null=True)),
                ('dropout', models.DecimalField(decimal_places=2, default=0.25, max_digits=3)),
                ('optimizer', models.CharField(choices=[('adam', 'ADAM')], default='adam', max_length=20)),
                ('loss', models.CharField(choices=[('mse', 'MSE'), ('mae', 'MAE')], default='mse', max_length=20)),
                ('activation_func', models.CharField(choices=[('tanh', 'Tanh')], default='tanh', max_length=20)),
                ('interval', models.CharField(choices=[('M', 'MINUTE'), ('H', 'HOUR'), ('D', 'DAILY')], default='M', max_length=20)),
                ('training_history', models.JSONField(blank=True, null=True)),
                ('weights_file', models.CharField(blank=True, max_length=200)),
                ('scaler', models.CharField(choices=[('window', 'WINDOW'), ('standard', 'STANDARD'), ('minmax', 'MINMAX'), ('robust', 'ROBUST')], default='minmax', max_length=20)),
            ],
            options={
                'unique_together': {('name', 'start_date', 'end_date', 'window_length', 'output_size', 'neurons', 'shuffle_buffer_size', 'training_size', 'epochs', 'batch_size', 'dropout', 'optimizer', 'loss', 'activation_func')},
            },
        ),
    ]
